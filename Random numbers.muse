Random numbers are useful in many scientific applications. We often
want to initialize parameters for a formula with random numbers, or we
want to generate some random data to test formulas. Generating random
numbers in C++ is relatively simple. The =<cstdlib>= and =<ctime>= headers
are needed for random numbers.

Before a random number can be generated, however, the *seed* must be
initialized. Since a computer cannot do anything truly random, these
"random" numbers are not really random, they are what's called
"pseudorandom." They are generated from a complicated mathematical
formula based on an integer known as a seed. The seed is set with the
following function:

<src lang="c++">
srand(time(NULL));
</src>

This sets the seed to be whatever the time is. Since the time is going
to be different every time you run your program, the seed will be
different, too, and so will the "random" numbers. Using the same seed
twice results in the same "random" numbers.

After you have set the seed, you can continuously ask for a new random
number with this function:

<src lang="c++">
int r = rand();
int s = rand();
int t = rand();
</src>

The variables =r=, =s=, and =t= will each contain a different random
number. A random number, as generated by =rand()=, is some number
between =0= and =RAND_MAX= (which is usually about 32,000). Thus there is
a bound for random numbers.

Then how do we get random numbers between two numbers, such as 0 and
10? Or how do we get random decimal numbers between 0.0 and 1.0? Refer
to the following formulas.

Produce a random integer between =0= and =RAND_MAX= (inclusive; i.e., =[0,
RAND_MAX]=):

<src lang="c++">
int x = rand();
</src>

Produce a random double in the range [0.0, 1.0]:

<src lang="c++">
double x = rand() / double(RAND_MAX);
</src>

Produce a random double in the range [0.0, 1.0) (i.e. not including 1.0):

<src lang="c++">
double x = rand() / double(RAND_MAX + 1);
</src>

Produce a random integer in the range [0, 9]:

<src lang="c++">
int x = int(10 * rand() / double(RAND_MAX + 1));
</src>

Produce a random double in the range (0.0, 1.0) (i.e. not including 0.0 or 1.0):

<src lang="c++">
double x = (rand() + 1) / double(RAND_MAX + 2);
</src>

Produce a random double in the range (0.0, 10.0):

<src lang="c++">
double x = 10.0 * ((rand() + 1) / double(RAND_MAX + 2));
</src>

Produce a random double in the range (-2.5, 2.5):

<src lang="c++">
double x = 5.0 * ((rand() + 1) / double(RAND_MAX + 2)) - 2.5;
</src>

Produce a random integer in the range [1, 6] (like a six-sided die):

<src lang="c++">
int x = int(6 * rand() / double(RAND_MAX + 1)) + 1;
</src>

Produce a random integer in the range [-5, 5]:

<src lang="c++">
int x = int(11 * rand() / double(RAND_MAX + 1)) - 5;
</src>

Produce a random integer in the range [min, max]:

<src lang="c++">
int x = int((max - min + 1) * rand() / double(RAND_MAX + 1) + min;
</src>
